/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : Rx1.h
**     Project     : ProcessorExpert
**     Processor   : MK60DN512ZVLQ10
**     Component   : RingBufferUInt8
**     Version     : Component 01.007, Driver 01.00, CPU db: 3.00.001
**     Compiler    : GNU C Compiler
**     Date/Time   : 2014-01-08, 10:58, # CodeGen: 2
**     Abstract    :
**         This component implements a ring buffer for an 8bit data type.
**     Settings    :
**          Component name                                 : Rx1
**          Buffer Size                                    : 64
**     Contents    :
**         Clear           - void Rx1_Clear(void);
**         Put             - byte Rx1_Put(byte elem);
**         Get             - byte Rx1_Get(byte *elemP);
**         NofElements     - byte Rx1_NofElements(void);
**         NofFreeElements - byte Rx1_NofFreeElements(void);
**         Init            - void Rx1_Init(void);
**
**     License   :  Open Source (LGPL)
**     Copyright : (c) Copyright Erich Styger, 2013, all rights reserved.
**     Web: http://www.mcuoneclipse.com
**     This an open source software of an embedded component for Processor Expert.
**     This is a free software and is opened for education,  research  and commercial developments under license policy of following terms:
**     * This is a free software and there is NO WARRANTY.
**     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or commercial product UNDER YOUR RESPONSIBILITY.
**     * Redistributions of source code must retain the above copyright notice.
** ###################################################################*/
/*!
** @file Rx1.h
** @version 01.00
** @brief
**         This component implements a ring buffer for an 8bit data type.
*/         
/*!
**  @addtogroup Rx1_module Rx1 module documentation
**  @{
*/         

#ifndef __Rx1_H
#define __Rx1_H

/* MODULE Rx1. */

/* Include shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */

#include "Cpu.h"


#define Rx1_BUF_SIZE   64  /* number of elements in the buffer */


byte Rx1_Put(byte elem);
/*
** ===================================================================
**     Method      :  Rx1_Put (component RingBufferUInt8)
**     Description :
**         Puts a new element into the buffer
**     Parameters  :
**         NAME            - DESCRIPTION
**         elem            - New element to be put into the buffer
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte Rx1_Get(byte *elemP);
/*
** ===================================================================
**     Method      :  Rx1_Get (component RingBufferUInt8)
**     Description :
**         Removes an element from the buffer
**     Parameters  :
**         NAME            - DESCRIPTION
**       * elemP           - Pointer to where to store the received
**                           element
**     Returns     :
**         ---             - Error code
** ===================================================================
*/

byte Rx1_NofElements(void);
/*
** ===================================================================
**     Method      :  Rx1_NofElements (component RingBufferUInt8)
**     Description :
**         Returns the actual number of elements in the buffer.
**     Parameters  : None
**     Returns     :
**         ---             - Number of elements in the buffer.
** ===================================================================
*/

void Rx1_Init(void);
/*
** ===================================================================
**     Method      :  Rx1_Init (component RingBufferUInt8)
**     Description :
**         Initializes the data structure
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

byte Rx1_NofFreeElements(void);
/*
** ===================================================================
**     Method      :  Rx1_NofFreeElements (component RingBufferUInt8)
**     Description :
**         Returns the actual number of free elements/space in the
**         buffer.
**     Parameters  : None
**     Returns     :
**         ---             - Number of elements in the buffer.
** ===================================================================
*/

void Rx1_Clear(void);
/*
** ===================================================================
**     Method      :  Rx1_Clear (component RingBufferUInt8)
**     Description :
**         Clear (empty) the ring buffer.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/* END Rx1. */

#endif
/* ifndef __Rx1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.2 [05.07]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
